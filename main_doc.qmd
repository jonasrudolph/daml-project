---
title: "Prüfungsleistung Data Science & Machine Learning: Salary by job title and country"
title-block-banner: true
author: Mathis, Julia und Jonas
format: 
  html: 
    theme: Superhero
    toc: true
    toc_float: true
    embed-resources: true
    code-fold: true
  pdf: 
    toc: true
    number-sections: true
date: 2023-11-13
---

# Explorative Datenanalyse

## Vorbereitung

```{r}
library(tidyverse)
library(explore) 
library(ggplot2)
library(corrplot)
```

## Einlesen der zu Analysierenden Daten

```{r}
salary <- read_csv("Salary.csv")
```

## Ertes Anschauen des Datensatzes

Nun werfen wir einen ersten Blick auf die Struktur der Daten in dem wir die ersten 10 Datensätze ausgeben:

```{r}
head(salary, 10)
```

```{r}
describe_tbl(salary)
```

In dem Datensatz gibt es 6684 Instanzen, keine von diesen enthalten Werte ohne Angaben.

Innerhalb der Tabelle haben wir nur zwei verschiedene Datentypen. Die Felder \*Age, Education Level, Years of Experience, Salary, Senior\* sind nummerische Merkmale. Die Felder *Gender, Job Title, Country, Race* sind  kategorische Merkmale.

```{r}
describe(salary)
```

| Spalte              | Typ         | Bedeutung                     |
|---------------------|-------------|-------------------------------|
| Age                 | Numerisch   | Alter                         |
| Gender              | Kategorisch | Geschlecht                    |
| Education Level     | Numerisch   | Bildungsgrad                  |
| Job Title           | Kategorisch | Jobtitel                      |
| Years of Experience | Numerisch   | Arbeitserfahrung in Jahren    |
| Salary              | Numerisch   | Gehalt                        |
| Country             | Kategorisch | Land                          |
| Race                | Kategorisch | Ethnizität                    |
| Senior              | Numerisch   | Senior position ja(1)/nein(0) |

: Datentypen und Bedeutung der Spalten

Umbennen der Spalten in einfache Namen:

```{r}
salary <- salary |>
    rename(
      Job.Title = `Job Title`,
      Years.Of.Experience = `Years of Experience`,
      Education.Level = `Education Level`
    )
```

Verteilung der Jobs in %: (hier ein problem. verteilung kann nicht stimmen)

```{r}
explore (salary, Job.Title)
```

Grundlegende Statistische Merkmale des Datensatzes

```{r}
summary(salary)
```

```{r}
Salary_long <- select(salary, -Job.Title, -Gender, -Race, -Country, -Senior)
Salary_long <- pivot_longer(Salary_long, colnames(Salary_long))
Salary <- as.data.frame(Salary_long) 
head(Salary_long)
```

```{r}
ggplot(Salary_long, aes(x = value)) +
  geom_histogram() +
  facet_wrap(~ name, scales = "free")
```

Hier kann man folgende Dinge erkennen:

-   Age, Years of Experience und Education Level sind Linksschief und haben ggf. Bedarf einer Transformation für ML-Modelle

-   Age und Years of Experience haben Extrempunkte im oberen Wertebereich, während Salary einer gleichmäßigen Verteilung folgt

Aufgrund der guten Strukturiertheit der Daten eignen sie sich dem ersten Anschein nach gut für eine Ausführliche Explorative Analyse.

## Aufbereiten der Daten -\> abschneiden von allen jobs unter anzahl x

### Endgültiges Datenset erstellen

Zuweisen der aufbereiteten Daten

```{r}
salary_final <- salary
```

```{r}
hist(salary_final$Salary)
```

```{r}

salary_final$SalaryKat <- cut(salary_final$Salary, 
                  breaks = c(-Inf, 50000, 100000, 150000, 200000, 250000, Inf),                      labels = c("50000", "100000", "150000", "200000","250000", "300000"))

```

```{r}
explore(salary_final, SalaryKat)
```

# ein paar tests

```{r}
correlations <- cor(salary_final[, c("Age", "Education.Level", "Years.Of.Experience", "Salary")])

print(correlations)
```

```{r}
ggplot(salary_final, aes(x = Years.Of.Experience, y = Salary)) +
  geom_point(color = "blue", size = 3, shape = 16) +
  labs(title = "Scatter Plot of Years of Experience vs Salary",
       x = "Years of Experience",
       y = "Salary")
```

```{r}
ggplot(salary_final, aes(x = Education.Level, y = Salary)) +
  geom_point(color = "blue", size = 3, shape = 16) +
  labs(title = "Scatter Plot of Years of Experience vs Salary",
       x = "Years of Experience",
       y = "Salary")

```

```{r}
ggplot(salary_final, aes(x = Race, y = Salary)) +
  geom_bar(stat = "summary", fun = "mean", fill = "blue") +
  labs(title = "Average Salary by Race",
       x = "Race",
       y = "Average Salary")

```

```{r}
ggplot(salary_final, aes(x = Gender, y = Salary, fill = Gender)) +
  geom_boxplot() +
  labs(title = "Distribution of Salary by Gender",
       x = "Gender",
       y = "Salary")
```

```{r}
ggplot(salary_final, aes(x = Country, y = Salary, fill = Country)) +
  geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
  labs(title = "Average Salary by Country",
       x = "Country",
       y = "Average Salary") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}



ggplot(salary_final, aes(x = Country, y = Salary, fill = Gender)) +
  geom_bar(stat = "summary", fun = "mean", position = "stack", color = "black") +
  labs(title = "Average Salary by Country and Gender",
       x = "Country",
       y = "Average Salary") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 

```

```{r}
ggplot(salary_final, aes(x = Country, y = Salary, fill = factor(Education.Level))) +
  geom_bar(stat = "summary", fun = "mean", position = "dodge", color = "black") +
  labs(title = "Average Salary by Country and Education Level",
       x = "Country",
       y = "Average Salary") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  
```

```{r}
ggplot(salary_final, aes(x = Country, y = Salary, fill = Race)) +
  geom_bar(stat = "summary", fun = "mean", position = "stack", color = "black") +
  labs(title = "Average Salary by Country and Race",
       x = "Country",
       y = "Average Salary") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
```

```{r}
ggplot(salary_final, aes(x = Country, y = Salary, fill = Race)) +
  geom_boxplot() +
  stat_summary(fun = "median", geom = "point", shape = 18, size = 3, color = "red", position = position_dodge(width = 0.75)) +
  labs(title = "Salary Distribution by Country and Race",
       x = "Country",
       y = "Salary") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  

```

```{r}
ggplot(salary_final, aes(x = Job.Title, y = Salary)) +
  geom_bar(stat = "summary", fun = "mean", fill = "blue", color = "black") +
  labs(title = "Average Salary by Job Title",
       x = "Job Title",
       y = "Average Salary") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  
```

```{r}
job_title_count <- table(salary_final$Job.Title)
print(job_title_count)
```

```{r}
job_title_count <- table(salary_final$Job.Title)
job_title_df <- data.frame(Job_Title = names(job_title_count), Frequency = as.numeric(job_title_count))

ggplot(job_title_df, aes(x = Job_Title, y = Frequency)) +
  geom_bar(stat = "identity", fill = "blue", color = "black") +
  labs(title = "Frequency of Unique Job Titles",
       x = "Job Titles",
       y = "Frequency") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  
```

Da in dem Datensatz teilweise Jobs nur einmalig vertreten sind, kann ein erhebliches Stichproben-Bias verursacht werden. Da das mittlere Einkommen ein wichtiges Merkmal in unserer explorativen Datenanalyse darstellt und mindestens 30 Einträge für eine aussagekräftige Stichprobe nötig sind, haben wir uns dazu entschlossen alle Einträge mit N\<30 bei der Anzahl der Jobtitel (N) abzuschneiden.

```{r}
filtered_data <- salary_final %>%
  group_by(Job.Title) %>%
  summarise(job_count = n()) %>%
  filter(job_count > 30) %>%
  inner_join(salary_final, by = "Job.Title")

print(filtered_data)
```

```{r}
job_title_count <- table(filtered_data$Job.Title)
print(job_title_count)
```

```{r}
job_title_count <- table(filtered_data$Job.Title)
job_title_df <- data.frame(Job_Title = names(job_title_count), Frequency = as.numeric(job_title_count))

ggplot(job_title_df, aes(x = Job_Title, y = Frequency)) +
  geom_bar(stat = "identity", fill = "blue", color = "black") +
  labs(title = "Frequency of Unique Job Titles",
       x = "Job Titles",
       y = "Frequency") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  
```

```{r}
job_title_count_filtered <- table(filtered_data$Job.Title)
cat(paste(names(job_title_count_filtered), ":", job_title_count_filtered, "\n"))
```

```{r}
filtered_data_numeric <- select(salary, Salary, Age, Years.Of.Experience, Education.Level)
glimpse(filtered_data_numeric)
cor(filtered_data_numeric)
```

```{r}
filtered_data_numeric |>
   cor() |> 
   corrplot(method = 'ellipse')
```

